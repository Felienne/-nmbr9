"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class deck {
    constructor() {
        this.allcards = [0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9];
        this.index = 0;
        this.shuffle();
    }
    shuffle() {
        for (let i = this.allcards.length - 1; i > 0; i--) {
            const j = Math.floor(Math.random() * (i + 1));
            [this.allcards[i], this.allcards[j]] = [this.allcards[j], this.allcards[i]];
        }
    }
    draw() {
        this.index++;
        const end = 4; //this.allcards.length
        if (this.index >= end)
            return false;
        return { turn: this.index, value: this.allcards[this.index] };
    }
}
exports.deck = deck;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FyZHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJjYXJkcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUtBLE1BQWEsSUFBSTtJQUliO1FBSFEsYUFBUSxHQUFZLENBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLEVBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLEVBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLEVBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLEVBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLEVBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLEVBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxDQUFDO1FBS2xFLElBQUksQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDO1FBQ2YsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFBO0lBQ2xCLENBQUM7SUFFTyxPQUFPO1FBRVgsS0FBSyxJQUFJLENBQUMsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUMvQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQzlDLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUMvRTtJQUNMLENBQUM7SUFFTSxJQUFJO1FBRVAsSUFBSSxDQUFDLEtBQUssRUFBRSxDQUFDO1FBQ2IsTUFBTSxHQUFHLEdBQUcsQ0FBQyxDQUFDLENBQUMsc0JBQXNCO1FBQ3JDLElBQUksSUFBSSxDQUFDLEtBQUssSUFBRSxHQUFHO1lBQUUsT0FBTyxLQUFLLENBQUM7UUFDbEMsT0FBTyxFQUFDLElBQUksRUFBRSxJQUFJLENBQUMsS0FBSyxFQUFFLEtBQUssRUFBRSxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBQyxDQUFBO0lBQy9ELENBQUM7Q0FDSjtBQXpCRCxvQkF5QkMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgaW50ZXJmYWNlIHR1cGxlIHtcbiAgICB0dXJuOiBudW1iZXI7XG4gICAgdmFsdWU6IG51bWJlcjtcbn1cblxuZXhwb3J0IGNsYXNzIGRlY2sge1xuICAgIHByaXZhdGUgYWxsY2FyZHM6bnVtYmVyW10gPSBbMCwwLDEsMSwyLDIsMywzLDQsNCw1LDUsNiw2LDcsNyw4LDgsOSw5XTtcbiAgICBwcml2YXRlIGluZGV4Om51bWJlcjtcblxuICAgIHB1YmxpYyBjb25zdHJ1Y3RvcigpXG4gICAge1xuICAgICAgICB0aGlzLmluZGV4ID0gMDtcbiAgICAgICAgdGhpcy5zaHVmZmxlKClcbiAgICB9XG5cbiAgICBwcml2YXRlIHNodWZmbGUoKTp2b2lkXG4gICAge1xuICAgICAgICBmb3IgKGxldCBpID0gdGhpcy5hbGxjYXJkcy5sZW5ndGggLSAxOyBpID4gMDsgaS0tKSB7XG4gICAgICAgICAgICBjb25zdCBqID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogKGkgKyAxKSk7XG4gICAgICAgICAgICBbdGhpcy5hbGxjYXJkc1tpXSwgdGhpcy5hbGxjYXJkc1tqXV0gPSBbdGhpcy5hbGxjYXJkc1tqXSwgdGhpcy5hbGxjYXJkc1tpXV07XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwdWJsaWMgZHJhdygpOnR1cGxlfGZhbHNlXG4gICAge1xuICAgICAgICB0aGlzLmluZGV4Kys7XG4gICAgICAgIGNvbnN0IGVuZCA9IDQ7IC8vdGhpcy5hbGxjYXJkcy5sZW5ndGhcbiAgICAgICAgaWYgKHRoaXMuaW5kZXg+PWVuZCkgcmV0dXJuIGZhbHNlO1xuICAgICAgICByZXR1cm4ge3R1cm46IHRoaXMuaW5kZXgsIHZhbHVlOiB0aGlzLmFsbGNhcmRzW3RoaXMuaW5kZXhdfVxuICAgIH1cbn0iXX0=