deck, #plays per deck, failed games, mean, stdev, iterations, selectorstring, boardScoreCalculatorString
//bord-size 16
[1,1,4,5,5,4,3,7,6,2,9,8,8,6,2,0,0,7,3,9], 1, 0, 49, 0.00, 50, board.holesAt 6, 12, 15, 20 and heights, 0, 0, 1, 2, board.score()
[1,1,4,5,5,4,3,7,6,2,9,8,8,6,2,0,0,7,3,9], 1, 0, 64, 0.00, 1000, board.holesAt 6, 12, 15, 20 and heights, 0, 0, 1, 2, board.score()
[1,1,4,5,5,4,3,7,6,2,9,8,8,6,2,0,0,7,3,9], 1, 1, NaN, NaN, 50, board.holesAt 4, 10, 15, 20 and heights, 0, 0, 2, 3, board.score()
[1,1,4,5,5,4,3,7,6,2,9,8,8,6,2,0,0,7,3,9], 1, 0, 33, 0.00, 50, board.holesAt 4, 10, 15, 20 and heights, 0, 0, 1, 2, board.score()
[1,1,4,5,5,4,3,7,6,2,9,8,8,6,2,0,0,7,3,9], 1, 1, NaN, NaN, 50, board.holesAt 4, 10, 15, 20 and heights, 0, 0, 1, 2, board.score()
[1,1,4,5,5,4,3,7,6,2,9,8,8,6,2,0,0,7,3,9], 1, 0, 38, 0.00, 50, board.holesAt 6, 12, 18, 23 and heights, 0, 0, 1, 2, board.score()
[1,1,4,5,5,4,3,7,6,2,9,8,8,6,2,0,0,7,3,9], 1, 0, 33, 0.00, 50, board.holesAt 6, 12, 18, 23 and heights, 0, 0, 1, 2, board.score()
[9,7,6,3,6,0,1,3,0,9,7,4,5,4,8,2,8,1,2,5], 1, 0, 37, 0.00, 1000, board.holesAt 6, 12, 15, 20 and heights, 0, 0, 1, 2, board.score()
[2,7,1,3,2,9,1,3,4,6,9,0,0,8,5,4,8,5,6,7], 5, 3, 45, 2.65, 1000, board.holesAt 6, 12, 15, 20 and heights, 0, 0, 1, 2, board.score()
[6,1,7,2,9,8,1,3,0,0,8,5,4,3,4,7,5,6,2,9], 5, 0, 56, 4.36, 1000, board.holesAt 6, 12, 15, 20 and heights, 0, 0, 1, 2, board.score()
[1,1,9,3,2,4,2,3,0,4,7,6,8,7,6,8,5,0,5,9], 5, 0, 48, 6.63, 1000, board.holesAt 6, 12, 15, 20 and heights, 0, 0, 1, 2, board.score()
[8,6,4,9,5,2,7,0,0,4,3,8,9,1,3,1,2,6,7,5], 5, 0, 54, 7.94, 1000, board.holesAt 6, 12, 15, 20 and heights, 0, 0, 1, 2, board.score()
[1,1,4,5,5,4,3,7,6,2,9,8,8,6,2,0,0,7,3,9], 5, 1, 58, 5.48, 1000, board.holesAt 6, 12, 15, 20 and heights, 0, 0, 1, 2, board.score()
[9,7,6,3,6,0,1,3,0,9,7,4,5,4,8,2,8,1,2,5], 5, 0, 51, 7.28, 1000, board.holesAt 6, 12, 15, 20 and heights, 0, 0, 1, 2, board.score()
[3,1,2,8,9,5,4,8,0,5,6,3,7,2,4,0,1,6,9,7], 5, 2, 49, 5.48, 1000, board.holesAt 6, 12, 15, 20 and heights, 0, 0, 1, 2, board.score()
[0,6,3,5,2,6,8,7,3,8,7,1,5,9,9,4,2,0,1,4], 5, 5, NaN, NaN, 1000, board.holesAt 6, 12, 15, 20 and heights, 0, 0, 1, 2, board.score()
[9,3,4,0,5,2,6,6,0,7,3,2,8,8,7,1,4,5,9,1], 5, 2, 53, 6.48, 1000, board.holesAt 6, 12, 15, 20 and heights, 0, 0, 1, 2, board.score()
[9,6,4,4,5,7,3,7,3,0,2,1,6,8,1,8,9,5,0,2], 5, 0, 51, 6.32, 1000, board.holesAt 6, 12, 15, 20 and heights, 0, 0, 1, 2, board.score()
[0,5,3,0,1,8,2,1,5,8,6,9,7,9,2,4,3,4,6,7], 5, 5, NaN, NaN, 1000, board.holesAt 6, 12, 15, 20 and heights, 0, 0, 1, 2, board.score()

[2,7,1,3,2,9,1,3,4,6,9,0,0,8,5,4,8,5,6,7], 5, 0, 55, 8.72, 1000, board.holesAt 6, 12, 15, 20 and heights, 0, 0, 1, 2, board.score()
[6,1,7,2,9,8,1,3,0,0,8,5,4,3,4,7,5,6,2,9], 5, 0, 58, 3.87, 1000, board.holesAt 6, 12, 15, 20 and heights, 0, 0, 1, 2, board.score()
[1,1,9,3,2,4,2,3,0,4,7,6,8,7,6,8,5,0,5,9], 5, 0, 55, 3.74, 1000, board.holesAt 6, 12, 15, 20 and heights, 0, 0, 1, 2, board.score()
[8,6,4,9,5,2,7,0,0,4,3,8,9,1,3,1,2,6,7,5], 5, 0, 65, 8.54, 1000, board.holesAt 6, 12, 15, 20 and heights, 0, 0, 1, 2, board.score()
[1,1,4,5,5,4,3,7,6,2,9,8,8,6,2,0,0,7,3,9], 5, 0, 60, 4.36, 1000, board.holesAt 6, 12, 15, 20 and heights, 0, 0, 1, 2, board.score()
[9,7,6,3,6,0,1,3,0,9,7,4,5,4,8,2,8,1,2,5], 5, 0, 57, 7.94, 1000, board.holesAt 6, 12, 15, 20 and heights, 0, 0, 1, 2, board.score()
[3,1,2,8,9,5,4,8,0,5,6,3,7,2,4,0,1,6,9,7], 5, 0, 54, 7.48, 1000, board.holesAt 6, 12, 15, 20 and heights, 0, 0, 1, 2, board.score()
[0,6,3,5,2,6,8,7,3,8,7,1,5,9,9,4,2,0,1,4], 5, 0, 52, 4.80, 1000, board.holesAt 6, 12, 15, 20 and heights, 0, 0, 1, 2, board.score()
[9,3,4,0,5,2,6,6,0,7,3,2,8,8,7,1,4,5,9,1], 5, 0, 47, 5.00, 1000, board.holesAt 6, 12, 15, 20 and heights, 0, 0, 1, 2, board.score()
[9,6,4,4,5,7,3,7,3,0,2,1,6,8,1,8,9,5,0,2], 5, 0, 57, 5.39, 1000, board.holesAt 6, 12, 15, 20 and heights, 0, 0, 1, 2, board.score()
[0,5,3,0,1,8,2,1,5,8,6,9,7,9,2,4,3,4,6,7], 5, 0, 55, 13.64, 1000, board.holesAt 6, 12, 15, 20 and heights, 0, 0, 1, 2, board.score()

//bord-size 20
[9,7,6,3,6,0,1,3,0,9,7,4,5,4,8,2,8,1,2,5], 5, 0, 29, 2.83, 100, board.holesAt 6 then size < 100, board.score()
[9,7,6,3,6,0,1,3,0,9,7,4,5,4,8,2,8,1,2,5], 5, 0, 35, 4.47, 100, board.holesAt 6 then size < 100, board.score()
[9,7,6,3,6,0,1,3,0,9,7,4,5,4,8,2,8,1,2,5], 5, 0, 8, 6.78, 100, board.holesAt 6 then size < 100, board.score()
[9,7,6,3,6,0,1,3,0,9,7,4,5,4,8,2,8,1,2,5], 5, 0, 15, 6.24, 100, board.holesAt 6 then width and height < 20, board.score()
[9,7,6,3,6,0,1,3,0,9,7,4,5,4,8,2,8,1,2,5], 5, 0, 36, 5.92, 100, board.holesAt 6 then width and height < 15, board.score()
[9,7,6,3,6,0,1,3,0,9,7,4,5,4,8,2,8,1,2,5], 5, 0, 32, 5.20, 100, board.holesAt 6 then width and height < 10, board.score()
[9,7,6,3,6,0,1,3,0,9,7,4,5,4,8,2,8,1,2,5], 5, 0, 43, 7.35, 100, board.holesAt 6 then width and height < 12, board.score()
[9,7,6,3,6,0,1,3,0,9,7,4,5,4,8,2,8,1,2,5], 5, 0, 43, 7.87, 100, board.holesAt and heightselection as before, and >5 turns width and height < 12, board.score()
[2,7,1,3,2,9,1,3,4,6,9,0,0,8,5,4,8,5,6,7], 5, 0, 44, 14.56, 100, >5 turns width and height < 12, board.score()
[6,1,7,2,9,8,1,3,0,0,8,5,4,3,4,7,5,6,2,9], 5, 0, 50, 10.58, 100, >5 turns width and height < 12, board.score()
[1,1,9,3,2,4,2,3,0,4,7,6,8,7,6,8,5,0,5,9], 5, 0, 42, 9.00, 100, >5 turns width and height < 12, board.score()
[8,6,4,9,5,2,7,0,0,4,3,8,9,1,3,1,2,6,7,5], 5, 0, 34, 12.17, 100, >5 turns width and height < 12, board.score()
[1,1,4,5,5,4,3,7,6,2,9,8,8,6,2,0,0,7,3,9], 5, 0, 50, 9.33, 100, >5 turns width and height < 12, board.score()
[9,7,6,3,6,0,1,3,0,9,7,4,5,4,8,2,8,1,2,5], 5, 0, 42, 21.82, 100, >5 turns width and height < 12, board.score()
[3,1,2,8,9,5,4,8,0,5,6,3,7,2,4,0,1,6,9,7], 5, 0, 44, 17.29, 100, >5 turns width and height < 12, board.score()
[0,6,3,5,2,6,8,7,3,8,7,1,5,9,9,4,2,0,1,4], 5, 0, 48, 3.32, 100, >5 turns width and height < 12, board.score()
[9,3,4,0,5,2,6,6,0,7,3,2,8,8,7,1,4,5,9,1], 5, 0, 38, 10.00, 100, >5 turns width and height < 12, board.score()
[9,6,4,4,5,7,3,7,3,0,2,1,6,8,1,8,9,5,0,2], 5, 0, 61, 11.27, 100, >5 turns width and height < 12, board.score()
[0,5,3,0,1,8,2,1,5,8,6,9,7,9,2,4,3,4,6,7], 5, 0, 45, 1.00, 100, >5 turns width and height < 12, board.score()

