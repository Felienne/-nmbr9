deck, #plays per deck, failed games, mean, stdev, iterations, selectorstring, boardScoreCalculatorString
//bord-size 16
[1,1,4,5,5,4,3,7,6,2,9,8,8,6,2,0,0,7,3,9], 1, 0, 49, 0.00, 50, board.holesAt 6, 12, 15, 20 and heights, 0, 0, 1, 2, board.score()
[1,1,4,5,5,4,3,7,6,2,9,8,8,6,2,0,0,7,3,9], 1, 0, 64, 0.00, 1000, board.holesAt 6, 12, 15, 20 and heights, 0, 0, 1, 2, board.score()
[1,1,4,5,5,4,3,7,6,2,9,8,8,6,2,0,0,7,3,9], 1, 1, NaN, NaN, 50, board.holesAt 4, 10, 15, 20 and heights, 0, 0, 2, 3, board.score()
[1,1,4,5,5,4,3,7,6,2,9,8,8,6,2,0,0,7,3,9], 1, 0, 33, 0.00, 50, board.holesAt 4, 10, 15, 20 and heights, 0, 0, 1, 2, board.score()
[1,1,4,5,5,4,3,7,6,2,9,8,8,6,2,0,0,7,3,9], 1, 1, NaN, NaN, 50, board.holesAt 4, 10, 15, 20 and heights, 0, 0, 1, 2, board.score()
[1,1,4,5,5,4,3,7,6,2,9,8,8,6,2,0,0,7,3,9], 1, 0, 38, 0.00, 50, board.holesAt 6, 12, 18, 23 and heights, 0, 0, 1, 2, board.score()
[1,1,4,5,5,4,3,7,6,2,9,8,8,6,2,0,0,7,3,9], 1, 0, 33, 0.00, 50, board.holesAt 6, 12, 18, 23 and heights, 0, 0, 1, 2, board.score()
[9,7,6,3,6,0,1,3,0,9,7,4,5,4,8,2,8,1,2,5], 1, 0, 37, 0.00, 1000, board.holesAt 6, 12, 15, 20 and heights, 0, 0, 1, 2, board.score()
[2,7,1,3,2,9,1,3,4,6,9,0,0,8,5,4,8,5,6,7], 5, 3, 45, 2.65, 1000, board.holesAt 6, 12, 15, 20 and heights, 0, 0, 1, 2, board.score()
[6,1,7,2,9,8,1,3,0,0,8,5,4,3,4,7,5,6,2,9], 5, 0, 56, 4.36, 1000, board.holesAt 6, 12, 15, 20 and heights, 0, 0, 1, 2, board.score()
[1,1,9,3,2,4,2,3,0,4,7,6,8,7,6,8,5,0,5,9], 5, 0, 48, 6.63, 1000, board.holesAt 6, 12, 15, 20 and heights, 0, 0, 1, 2, board.score()
[8,6,4,9,5,2,7,0,0,4,3,8,9,1,3,1,2,6,7,5], 5, 0, 54, 7.94, 1000, board.holesAt 6, 12, 15, 20 and heights, 0, 0, 1, 2, board.score()
[1,1,4,5,5,4,3,7,6,2,9,8,8,6,2,0,0,7,3,9], 5, 1, 58, 5.48, 1000, board.holesAt 6, 12, 15, 20 and heights, 0, 0, 1, 2, board.score()
[9,7,6,3,6,0,1,3,0,9,7,4,5,4,8,2,8,1,2,5], 5, 0, 51, 7.28, 1000, board.holesAt 6, 12, 15, 20 and heights, 0, 0, 1, 2, board.score()
[3,1,2,8,9,5,4,8,0,5,6,3,7,2,4,0,1,6,9,7], 5, 2, 49, 5.48, 1000, board.holesAt 6, 12, 15, 20 and heights, 0, 0, 1, 2, board.score()
[0,6,3,5,2,6,8,7,3,8,7,1,5,9,9,4,2,0,1,4], 5, 5, NaN, NaN, 1000, board.holesAt 6, 12, 15, 20 and heights, 0, 0, 1, 2, board.score()
[9,3,4,0,5,2,6,6,0,7,3,2,8,8,7,1,4,5,9,1], 5, 2, 53, 6.48, 1000, board.holesAt 6, 12, 15, 20 and heights, 0, 0, 1, 2, board.score()
[9,6,4,4,5,7,3,7,3,0,2,1,6,8,1,8,9,5,0,2], 5, 0, 51, 6.32, 1000, board.holesAt 6, 12, 15, 20 and heights, 0, 0, 1, 2, board.score()
[0,5,3,0,1,8,2,1,5,8,6,9,7,9,2,4,3,4,6,7], 5, 5, NaN, NaN, 1000, board.holesAt 6, 12, 15, 20 and heights, 0, 0, 1, 2, board.score()

[2,7,1,3,2,9,1,3,4,6,9,0,0,8,5,4,8,5,6,7], 5, 0, 55, 8.72, 1000, board.holesAt 6, 12, 15, 20 and heights, 0, 0, 1, 2, board.score()
[6,1,7,2,9,8,1,3,0,0,8,5,4,3,4,7,5,6,2,9], 5, 0, 58, 3.87, 1000, board.holesAt 6, 12, 15, 20 and heights, 0, 0, 1, 2, board.score()
[1,1,9,3,2,4,2,3,0,4,7,6,8,7,6,8,5,0,5,9], 5, 0, 55, 3.74, 1000, board.holesAt 6, 12, 15, 20 and heights, 0, 0, 1, 2, board.score()
[8,6,4,9,5,2,7,0,0,4,3,8,9,1,3,1,2,6,7,5], 5, 0, 65, 8.54, 1000, board.holesAt 6, 12, 15, 20 and heights, 0, 0, 1, 2, board.score()
[1,1,4,5,5,4,3,7,6,2,9,8,8,6,2,0,0,7,3,9], 5, 0, 60, 4.36, 1000, board.holesAt 6, 12, 15, 20 and heights, 0, 0, 1, 2, board.score()
[9,7,6,3,6,0,1,3,0,9,7,4,5,4,8,2,8,1,2,5], 5, 0, 57, 7.94, 1000, board.holesAt 6, 12, 15, 20 and heights, 0, 0, 1, 2, board.score()
[3,1,2,8,9,5,4,8,0,5,6,3,7,2,4,0,1,6,9,7], 5, 0, 54, 7.48, 1000, board.holesAt 6, 12, 15, 20 and heights, 0, 0, 1, 2, board.score()
[0,6,3,5,2,6,8,7,3,8,7,1,5,9,9,4,2,0,1,4], 5, 0, 52, 4.80, 1000, board.holesAt 6, 12, 15, 20 and heights, 0, 0, 1, 2, board.score()
[9,3,4,0,5,2,6,6,0,7,3,2,8,8,7,1,4,5,9,1], 5, 0, 47, 5.00, 1000, board.holesAt 6, 12, 15, 20 and heights, 0, 0, 1, 2, board.score()
[9,6,4,4,5,7,3,7,3,0,2,1,6,8,1,8,9,5,0,2], 5, 0, 57, 5.39, 1000, board.holesAt 6, 12, 15, 20 and heights, 0, 0, 1, 2, board.score()
[0,5,3,0,1,8,2,1,5,8,6,9,7,9,2,4,3,4,6,7], 5, 0, 55, 13.64, 1000, board.holesAt 6, 12, 15, 20 and heights, 0, 0, 1, 2, board.score()

//bord-size 20
[9,7,6,3,6,0,1,3,0,9,7,4,5,4,8,2,8,1,2,5], 5, 0, 29, 2.83, 100, board.holesAt 6 then size < 100, board.score()
[9,7,6,3,6,0,1,3,0,9,7,4,5,4,8,2,8,1,2,5], 5, 0, 35, 4.47, 100, board.holesAt 6 then size < 100, board.score()
[9,7,6,3,6,0,1,3,0,9,7,4,5,4,8,2,8,1,2,5], 5, 0, 8, 6.78, 100, board.holesAt 6 then size < 100, board.score()
[9,7,6,3,6,0,1,3,0,9,7,4,5,4,8,2,8,1,2,5], 5, 0, 15, 6.24, 100, board.holesAt 6 then width and height < 20, board.score()
[9,7,6,3,6,0,1,3,0,9,7,4,5,4,8,2,8,1,2,5], 5, 0, 36, 5.92, 100, board.holesAt 6 then width and height < 15, board.score()
[9,7,6,3,6,0,1,3,0,9,7,4,5,4,8,2,8,1,2,5], 5, 0, 32, 5.20, 100, board.holesAt 6 then width and height < 10, board.score()
[9,7,6,3,6,0,1,3,0,9,7,4,5,4,8,2,8,1,2,5], 5, 0, 43, 7.35, 100, board.holesAt 6 then width and height < 12, board.score()
[9,7,6,3,6,0,1,3,0,9,7,4,5,4,8,2,8,1,2,5], 5, 0, 43, 7.87, 100, board.holesAt and heightselection as before, and >5 turns width and height < 12, board.score()

[2,7,1,3,2,9,1,3,4,6,9,0,0,8,5,4,8,5,6,7], 5, 0, 44, 14.56, 100, >5 turns width and height < 12, board.score()
[6,1,7,2,9,8,1,3,0,0,8,5,4,3,4,7,5,6,2,9], 5, 0, 50, 10.58, 100, >5 turns width and height < 12, board.score()
[1,1,9,3,2,4,2,3,0,4,7,6,8,7,6,8,5,0,5,9], 5, 0, 42, 9.00, 100, >5 turns width and height < 12, board.score()
[8,6,4,9,5,2,7,0,0,4,3,8,9,1,3,1,2,6,7,5], 5, 0, 34, 12.17, 100, >5 turns width and height < 12, board.score()
[1,1,4,5,5,4,3,7,6,2,9,8,8,6,2,0,0,7,3,9], 5, 0, 50, 9.33, 100, >5 turns width and height < 12, board.score()
[9,7,6,3,6,0,1,3,0,9,7,4,5,4,8,2,8,1,2,5], 5, 0, 42, 21.82, 100, >5 turns width and height < 12, board.score()
[3,1,2,8,9,5,4,8,0,5,6,3,7,2,4,0,1,6,9,7], 5, 0, 44, 17.29, 100, >5 turns width and height < 12, board.score()
[0,6,3,5,2,6,8,7,3,8,7,1,5,9,9,4,2,0,1,4], 5, 0, 48, 3.32, 100, >5 turns width and height < 12, board.score()
[9,3,4,0,5,2,6,6,0,7,3,2,8,8,7,1,4,5,9,1], 5, 0, 38, 10.00, 100, >5 turns width and height < 12, board.score()
[9,6,4,4,5,7,3,7,3,0,2,1,6,8,1,8,9,5,0,2], 5, 0, 61, 11.27, 100, >5 turns width and height < 12, board.score()
[0,5,3,0,1,8,2,1,5,8,6,9,7,9,2,4,3,4,6,7], 5, 0, 45, 1.00, 100, >5 turns width and height < 12, board.score()

[2,7,1,3,2,9,1,3,4,6,9,0,0,8,5,4,8,5,6,7], 5, 0, 22, 13.30, 100, >5 turns width and height < 10, board.score()
[6,1,7,2,9,8,1,3,0,0,8,5,4,3,4,7,5,6,2,9], 5, 0, 28, 2.45, 100, >5 turns width and height < 10, board.score()
[1,1,9,3,2,4,2,3,0,4,7,6,8,7,6,8,5,0,5,9], 5, 0, 39, 4.47, 100, >5 turns width and height < 10, board.score()
[8,6,4,9,5,2,7,0,0,4,3,8,9,1,3,1,2,6,7,5], 5, 0, 24, 3.16, 100, >5 turns width and height < 10, board.score()
[1,1,4,5,5,4,3,7,6,2,9,8,8,6,2,0,0,7,3,9], 5, 0, 56, 11.22, 100, >5 turns width and height < 10, board.score()
[9,7,6,3,6,0,1,3,0,9,7,4,5,4,8,2,8,1,2,5], 5, 0, 34, 2.24, 100, >5 turns width and height < 10, board.score()
[3,1,2,8,9,5,4,8,0,5,6,3,7,2,4,0,1,6,9,7], 5, 0, 28, 9.33, 100, >5 turns width and height < 10, board.score()
[0,6,3,5,2,6,8,7,3,8,7,1,5,9,9,4,2,0,1,4], 5, 0, 53, 4.90, 100, >5 turns width and height < 10, board.score()
[9,3,4,0,5,2,6,6,0,7,3,2,8,8,7,1,4,5,9,1], 5, 0, 28, 3.16, 100, >5 turns width and height < 10, board.score()
[9,6,4,4,5,7,3,7,3,0,2,1,6,8,1,8,9,5,0,2], 5, 0, 39, 19.67, 100, >5 turns width and height < 10, board.score()
[0,5,3,0,1,8,2,1,5,8,6,9,7,9,2,4,3,4,6,7], 5, 0, 42, 8.89, 100, >5 turns width and height < 10, board.score()

[2,7,1,3,2,9,1,3,4,6,9,0,0,8,5,4,8,5,6,7], 5, 0, 43, 8.25, 100, >5 turns width and height < 13, board.score()
[6,1,7,2,9,8,1,3,0,0,8,5,4,3,4,7,5,6,2,9], 5, 0, 64, 9.22, 100, >5 turns width and height < 13, board.score()
[1,1,9,3,2,4,2,3,0,4,7,6,8,7,6,8,5,0,5,9], 5, 0, 46, 5.00, 100, >5 turns width and height < 13, board.score()
[8,6,4,9,5,2,7,0,0,4,3,8,9,1,3,1,2,6,7,5], 5, 0, 48, 9.27, 100, >5 turns width and height < 13, board.score()
[1,1,4,5,5,4,3,7,6,2,9,8,8,6,2,0,0,7,3,9], 5, 0, 46, 7.48, 100, >5 turns width and height < 13, board.score()
[9,7,6,3,6,0,1,3,0,9,7,4,5,4,8,2,8,1,2,5], 5, 0, 40, 3.46, 100, >5 turns width and height < 13, board.score()
[3,1,2,8,9,5,4,8,0,5,6,3,7,2,4,0,1,6,9,7], 5, 0, 45, 2.45, 100, >5 turns width and height < 13, board.score()
[0,6,3,5,2,6,8,7,3,8,7,1,5,9,9,4,2,0,1,4], 5, 0, 37, 2.83, 100, >5 turns width and height < 13, board.score()
[9,3,4,0,5,2,6,6,0,7,3,2,8,8,7,1,4,5,9,1], 5, 0, 35, 2.00, 100, >5 turns width and height < 13, board.score()
[9,6,4,4,5,7,3,7,3,0,2,1,6,8,1,8,9,5,0,2], 5, 0, 48, 5.48, 100, >5 turns width and height < 13, board.score()
[0,5,3,0,1,8,2,1,5,8,6,9,7,9,2,4,3,4,6,7], 5, 0, 35, 3.87, 100, >5 turns width and height < 13, board.score()

 [2,7,1,3,2,9,1,3,4,6,9,0,0,8,5,4,8,5,6,7], 5, 0, 35, 6.56, 100, >5 turns width and gatenselectie als eerder (board.holesAt 6, 12, 15, 20 and heights, 0, 0, 1, 2) height < 13, board.score()
[6,1,7,2,9,8,1,3,0,0,8,5,4,3,4,7,5,6,2,9], 5, 0, 44, 5.20, 100, >5 turns width and gatenselectie als eerder (board.holesAt 6, 12, 15, 20 and heights, 0, 0, 1, 2) height < 13, board.score()
[1,1,9,3,2,4,2,3,0,4,7,6,8,7,6,8,5,0,5,9], 5, 0, 34, 5.74, 100, >5 turns width and gatenselectie als eerder (board.holesAt 6, 12, 15, 20 and heights, 0, 0, 1, 2) height < 13, board.score()
[8,6,4,9,5,2,7,0,0,4,3,8,9,1,3,1,2,6,7,5], 5, 0, 43, 6.86, 100, >5 turns width and gatenselectie als eerder (board.holesAt 6, 12, 15, 20 and heights, 0, 0, 1, 2) height < 13, board.score()
[1,1,4,5,5,4,3,7,6,2,9,8,8,6,2,0,0,7,3,9], 5, 0, 42, 8.77, 100, >5 turns width and gatenselectie als eerder (board.holesAt 6, 12, 15, 20 and heights, 0, 0, 1, 2) height < 13, board.score()
[9,7,6,3,6,0,1,3,0,9,7,4,5,4,8,2,8,1,2,5], 5, 0, 45, 5.57, 100, >5 turns width and gatenselectie als eerder (board.holesAt 6, 12, 15, 20 and heights, 0, 0, 1, 2) height < 13, board.score()
[3,1,2,8,9,5,4,8,0,5,6,3,7,2,4,0,1,6,9,7], 5, 0, 35, 5.83, 100, >5 turns width and gatenselectie als eerder (board.holesAt 6, 12, 15, 20 and heights, 0, 0, 1, 2) height < 13, board.score()
[0,6,3,5,2,6,8,7,3,8,7,1,5,9,9,4,2,0,1,4], 5, 0, 39, 7.87, 100, >5 turns width and gatenselectie als eerder (board.holesAt 6, 12, 15, 20 and heights, 0, 0, 1, 2) height < 13, board.score()
[9,3,4,0,5,2,6,6,0,7,3,2,8,8,7,1,4,5,9,1], 5, 0, 36, 3.87, 100, >5 turns width and gatenselectie als eerder (board.holesAt 6, 12, 15, 20 and heights, 0, 0, 1, 2) height < 13, board.score()
[9,6,4,4,5,7,3,7,3,0,2,1,6,8,1,8,9,5,0,2], 5, 0, 41, 3.87, 100, >5 turns width and gatenselectie als eerder (board.holesAt 6, 12, 15, 20 and heights, 0, 0, 1, 2) height < 13, board.score()
[0,5,3,0,1,8,2,1,5,8,6,9,7,9,2,4,3,4,6,7], 5, 0, 33, 3.00, 100, >5 turns width and gatenselectie als eerder (board.holesAt 6, 12, 15, 20 and heights, 0, 0, 1, 2) height < 13, board.score()

[2,7,1,3,2,9,1,3,4,6,9,0,0,8,5,4,8,5,6,7], 5, 0, 30, 4.58, 100, >5 turns width and gatenselectie als eerder (board.holesAt 6, 12, 15, 20 and heights, 0, 0, 1, 2) height < 12, board.score()
[6,1,7,2,9,8,1,3,0,0,8,5,4,3,4,7,5,6,2,9], 5, 0, 39, 7.07, 100, >5 turns width and gatenselectie als eerder (board.holesAt 6, 12, 15, 20 and heights, 0, 0, 1, 2) height < 12, board.score()
[1,1,9,3,2,4,2,3,0,4,7,6,8,7,6,8,5,0,5,9], 5, 0, 32, 3.32, 100, >5 turns width and gatenselectie als eerder (board.holesAt 6, 12, 15, 20 and heights, 0, 0, 1, 2) height < 12, board.score()
[8,6,4,9,5,2,7,0,0,4,3,8,9,1,3,1,2,6,7,5], 5, 0, 39, 8.54, 100, >5 turns width and gatenselectie als eerder (board.holesAt 6, 12, 15, 20 and heights, 0, 0, 1, 2) height < 12, board.score()
[1,1,4,5,5,4,3,7,6,2,9,8,8,6,2,0,0,7,3,9], 5, 0, 36, 6.16, 100, >5 turns width and gatenselectie als eerder (board.holesAt 6, 12, 15, 20 and heights, 0, 0, 1, 2) height < 12, board.score()
[9,7,6,3,6,0,1,3,0,9,7,4,5,4,8,2,8,1,2,5], 5, 0, 46, 6.32, 100, >5 turns width and gatenselectie als eerder (board.holesAt 6, 12, 15, 20 and heights, 0, 0, 1, 2) height < 12, board.score()
[3,1,2,8,9,5,4,8,0,5,6,3,7,2,4,0,1,6,9,7], 5, 0, 40, 12.04, 100, >5 turns width and gatenselectie als eerder (board.holesAt 6, 12, 15, 20 and heights, 0, 0, 1, 2) height < 12, board.score()
[0,6,3,5,2,6,8,7,3,8,7,1,5,9,9,4,2,0,1,4], 5, 0, 41, 4.47, 100, >5 turns width and gatenselectie als eerder (board.holesAt 6, 12, 15, 20 and heights, 0, 0, 1, 2) height < 12, board.score()
[9,3,4,0,5,2,6,6,0,7,3,2,8,8,7,1,4,5,9,1], 5, 0, 34, 6.16, 100, >5 turns width and gatenselectie als eerder (board.holesAt 6, 12, 15, 20 and heights, 0, 0, 1, 2) height < 12, board.score()
[9,6,4,4,5,7,3,7,3,0,2,1,6,8,1,8,9,5,0,2], 5, 0, 40, 6.86, 100, >5 turns width and gatenselectie als eerder (board.holesAt 6, 12, 15, 20 and heights, 0, 0, 1, 2) height < 12, board.score()
[0,5,3,0,1,8,2,1,5,8,6,9,7,9,2,4,3,4,6,7], 5, 0, 37, 11.45, 100, >5 turns width and gatenselectie als eerder (board.holesAt 6, 12, 15, 20 and heights, 0, 0, 1, 2) height < 12, board.score()

[2,7,1,3,2,9,1,3,4,6,9,0,0,8,5,4,8,5,6,7], 5, 0, 49, 11.36, 100, >5 turns width and height < 12, board.score() + board.maxHeight()*3
[6,1,7,2,9,8,1,3,0,0,8,5,4,3,4,7,5,6,2,9], 5, 0, 64, 4.00, 100, >5 turns width and height < 12, board.score() + board.maxHeight()*3
[1,1,9,3,2,4,2,3,0,4,7,6,8,7,6,8,5,0,5,9], 5, 0, 47, 2.65, 100, >5 turns width and height < 12, board.score() + board.maxHeight()*3
[8,6,4,9,5,2,7,0,0,4,3,8,9,1,3,1,2,6,7,5], 5, 0, 49, 13.93, 100, >5 turns width and height < 12, board.score() + board.maxHeight()*3
[1,1,4,5,5,4,3,7,6,2,9,8,8,6,2,0,0,7,3,9], 5, 0, 48, 11.36, 100, >5 turns width and height < 12, board.score() + board.maxHeight()*3
[9,7,6,3,6,0,1,3,0,9,7,4,5,4,8,2,8,1,2,5], 5, 0, 35, 11.49, 100, >5 turns width and height < 12, board.score() + board.maxHeight()*3
[3,1,2,8,9,5,4,8,0,5,6,3,7,2,4,0,1,6,9,7], 5, 0, 48, 12.77, 100, >5 turns width and height < 12, board.score() + board.maxHeight()*3
[0,6,3,5,2,6,8,7,3,8,7,1,5,9,9,4,2,0,1,4], 5, 0, 43, 6.56, 100, >5 turns width and height < 12, board.score() + board.maxHeight()*3
[9,3,4,0,5,2,6,6,0,7,3,2,8,8,7,1,4,5,9,1], 5, 0, 37, 7.75, 100, >5 turns width and height < 12, board.score() + board.maxHeight()*3
[9,6,4,4,5,7,3,7,3,0,2,1,6,8,1,8,9,5,0,2], 5, 0, 48, 12.21, 100, >5 turns width and height < 12, board.score() + board.maxHeight()*3
[0,5,3,0,1,8,2,1,5,8,6,9,7,9,2,4,3,4,6,7], 5, 0, 44, 8.49, 100, >5 turns width and height < 12, board.score() + board.maxHeight()*3

[2,7,1,3,2,9,1,3,4,6,9,0,0,8,5,4,8,5,6,7], 5, 0, 54, 9.43, 100, <5 turns < 4 holes & width and height < 12, board.score() + board.maxHeight()*5
[6,1,7,2,9,8,1,3,0,0,8,5,4,3,4,7,5,6,2,9], 5, 0, 53, 13.38, 100, <5 turns < 4 holes & width and height < 12, board.score() + board.maxHeight()*5
[1,1,9,3,2,4,2,3,0,4,7,6,8,7,6,8,5,0,5,9], 5, 0, 50, 4.00, 100, <5 turns < 4 holes & width and height < 12, board.score() + board.maxHeight()*5
[8,6,4,9,5,2,7,0,0,4,3,8,9,1,3,1,2,6,7,5], 5, 0, 49, 7.94, 100, <5 turns < 4 holes & width and height < 12, board.score() + board.maxHeight()*5
[1,1,4,5,5,4,3,7,6,2,9,8,8,6,2,0,0,7,3,9], 5, 0, 42, 5.20, 100, <5 turns < 4 holes & width and height < 12, board.score() + board.maxHeight()*5
[9,7,6,3,6,0,1,3,0,9,7,4,5,4,8,2,8,1,2,5], 5, 0, 42, 14.32, 100, <5 turns < 4 holes & width and height < 12, board.score() + board.maxHeight()*5
[3,1,2,8,9,5,4,8,0,5,6,3,7,2,4,0,1,6,9,7], 5, 0, 48, 12.12, 100, <5 turns < 4 holes & width and height < 12, board.score() + board.maxHeight()*5
[0,6,3,5,2,6,8,7,3,8,7,1,5,9,9,4,2,0,1,4], 5, 0, 52, 6.08, 100, <5 turns < 4 holes & width and height < 12, board.score() + board.maxHeight()*5
[9,3,4,0,5,2,6,6,0,7,3,2,8,8,7,1,4,5,9,1], 5, 0, 38, 5.92, 100, <5 turns < 4 holes & width and height < 12, board.score() + board.maxHeight()*5
[9,6,4,4,5,7,3,7,3,0,2,1,6,8,1,8,9,5,0,2], 5, 0, 45, 14.21, 100, <5 turns < 4 holes & width and height < 12, board.score() + board.maxHeight()*5
[0,5,3,0,1,8,2,1,5,8,6,9,7,9,2,4,3,4,6,7], 5, 0, 37, 5.66, 100, <5 turns < 4 holes & width and height < 12, board.score() + board.maxHeight()*5

[2,7,1,3,2,9,1,3,4,6,9,0,0,8,5,4,8,5,6,7], 5, 0, 48, 6.56, 100, <5 turns < 4 holes & width and height < 12, board.score() + board.maxHeight()*5
[6,1,7,2,9,8,1,3,0,0,8,5,4,3,4,7,5,6,2,9], 5, 0, 61, 8.60, 100, <5 turns < 4 holes & width and height < 12, board.score() + board.maxHeight()*5
[1,1,9,3,2,4,2,3,0,4,7,6,8,7,6,8,5,0,5,9], 5, 0, 46, 3.00, 100, <5 turns < 4 holes & width and height < 12, board.score() + board.maxHeight()*5
[8,6,4,9,5,2,7,0,0,4,3,8,9,1,3,1,2,6,7,5], 5, 0, 44, 17.00, 100, <5 turns < 4 holes & width and height < 12, board.score() + board.maxHeight()*5
[1,1,4,5,5,4,3,7,6,2,9,8,8,6,2,0,0,7,3,9], 5, 0, 60, 12.17, 100, <5 turns < 4 holes & width and height < 12, board.score() + board.maxHeight()*5
[9,7,6,3,6,0,1,3,0,9,7,4,5,4,8,2,8,1,2,5], 5, 0, 49, 6.93, 100, <5 turns < 4 holes & width and height < 12, board.score() + board.maxHeight()*5
[3,1,2,8,9,5,4,8,0,5,6,3,7,2,4,0,1,6,9,7], 5, 0, 56, 14.73, 100, <5 turns < 4 holes & width and height < 12, board.score() + board.maxHeight()*5
[0,6,3,5,2,6,8,7,3,8,7,1,5,9,9,4,2,0,1,4], 5, 0, 53, 14.73, 100, <5 turns < 4 holes & width and height < 12, board.score() + board.maxHeight()*5
[9,3,4,0,5,2,6,6,0,7,3,2,8,8,7,1,4,5,9,1], 5, 0, 34, 5.92, 100, <5 turns < 4 holes & width and height < 12, board.score() + board.maxHeight()*5
[9,6,4,4,5,7,3,7,3,0,2,1,6,8,1,8,9,5,0,2], 5, 0, 52, 6.56, 100, <5 turns < 4 holes & width and height < 12, board.score() + board.maxHeight()*5
[0,5,3,0,1,8,2,1,5,8,6,9,7,9,2,4,3,4,6,7], 5, 0, 50, 6.08, 100, <5 turns < 4 holes & width and height < 12, board.score() + board.maxHeight()*5

[2,7,1,3,2,9,1,3,4,6,9,0,0,8,5,4,8,5,6,7], 5, 0, 28, 11.18, 100, <5: turns < 4 holes & size 8 >10: height > 1 and 10 holes and size 12 >15: height > 1 and 20 holes and size 12, board.score() + board.maxHeight()*10
[6,1,7,2,9,8,1,3,0,0,8,5,4,3,4,7,5,6,2,9], 5, 0, 52, 7.55, 100, <5: turns < 4 holes & size 8 >10: height > 1 and 10 holes and size 12 >15: height > 1 and 20 holes and size 12, board.score() + board.maxHeight()*10
[1,1,9,3,2,4,2,3,0,4,7,6,8,7,6,8,5,0,5,9], 5, 0, 40, 7.28, 100, <5: turns < 4 holes & size 8 >10: height > 1 and 10 holes and size 12 >15: height > 1 and 20 holes and size 12, board.score() + board.maxHeight()*10
[8,6,4,9,5,2,7,0,0,4,3,8,9,1,3,1,2,6,7,5], 5, 0, 48, 6.63, 100, <5: turns < 4 holes & size 8 >10: height > 1 and 10 holes and size 12 >15: height > 1 and 20 holes and size 12, board.score() + board.maxHeight()*10
[1,1,4,5,5,4,3,7,6,2,9,8,8,6,2,0,0,7,3,9], 5, 0, 39, 4.80, 100, <5: turns < 4 holes & size 8 >10: height > 1 and 10 holes and size 12 >15: height > 1 and 20 holes and size 12, board.score() + board.maxHeight()*10
[9,7,6,3,6,0,1,3,0,9,7,4,5,4,8,2,8,1,2,5], 5, 0, 53, 11.79, 100, <5: turns < 4 holes & size 8 >10: height > 1 and 10 holes and size 12 >15: height > 1 and 20 holes and size 12, board.score() + board.maxHeight()*10
[3,1,2,8,9,5,4,8,0,5,6,3,7,2,4,0,1,6,9,7], 5, 0, 44, 4.69, 100, <5: turns < 4 holes & size 8 >10: height > 1 and 10 holes and size 12 >15: height > 1 and 20 holes and size 12, board.score() + board.maxHeight()*10
[0,6,3,5,2,6,8,7,3,8,7,1,5,9,9,4,2,0,1,4], 5, 0, 39, 6.48, 100, <5: turns < 4 holes & size 8 >10: height > 1 and 10 holes and size 12 >15: height > 1 and 20 holes and size 12, board.score() + board.maxHeight()*10
[9,3,4,0,5,2,6,6,0,7,3,2,8,8,7,1,4,5,9,1], 5, 0, 26, 6.86, 100, <5: turns < 4 holes & size 8 >10: height > 1 and 10 holes and size 12 >15: height > 1 and 20 holes and size 12, board.score() + board.maxHeight()*10
[9,6,4,4,5,7,3,7,3,0,2,1,6,8,1,8,9,5,0,2], 5, 0, 44, 7.94, 100, <5: turns < 4 holes & size 8 >10: height > 1 and 10 holes and size 12 >15: height > 1 and 20 holes and size 12, board.score() + board.maxHeight()*10
[0,5,3,0,1,8,2,1,5,8,6,9,7,9,2,4,3,4,6,7], 5, 0, 26, 8.25, 100, <5: turns < 4 holes & size 8 >10: height > 1 and 10 holes and size 12 >15: height > 1 and 20 holes and size 12, board.score() + board.maxHeight()*10

[2,7,1,3,2,9,1,3,4,6,9,0,0,8,5,4,8,5,6,7], 5, 0, 51, 8.83, 100, <5: turns < 6 holes & >5: size 12, board.score() + board.maxHeight()*5
[6,1,7,2,9,8,1,3,0,0,8,5,4,3,4,7,5,6,2,9], 5, 0, 69, 8.25, 100, <5: turns < 6 holes & >5: size 12, board.score() + board.maxHeight()*5
[1,1,9,3,2,4,2,3,0,4,7,6,8,7,6,8,5,0,5,9], 5, 0, 34, 9.64, 100, <5: turns < 6 holes & >5: size 12, board.score() + board.maxHeight()*5
[8,6,4,9,5,2,7,0,0,4,3,8,9,1,3,1,2,6,7,5], 5, 0, 43, 20.54, 100, <5: turns < 6 holes & >5: size 12, board.score() + board.maxHeight()*5
[1,1,4,5,5,4,3,7,6,2,9,8,8,6,2,0,0,7,3,9], 5, 0, 51, 6.71, 100, <5: turns < 6 holes & >5: size 12, board.score() + board.maxHeight()*5
[9,7,6,3,6,0,1,3,0,9,7,4,5,4,8,2,8,1,2,5], 5, 0, 46, 24.21, 100, <5: turns < 6 holes & >5: size 12, board.score() + board.maxHeight()*5
[3,1,2,8,9,5,4,8,0,5,6,3,7,2,4,0,1,6,9,7], 5, 0, 50, 7.35, 100, <5: turns < 6 holes & >5: size 12, board.score() + board.maxHeight()*5
[0,6,3,5,2,6,8,7,3,8,7,1,5,9,9,4,2,0,1,4], 5, 0, 49, 3.32, 100, <5: turns < 6 holes & >5: size 12, board.score() + board.maxHeight()*5
[9,3,4,0,5,2,6,6,0,7,3,2,8,8,7,1,4,5,9,1], 5, 0, 36, 4.69, 100, <5: turns < 6 holes & >5: size 12, board.score() + board.maxHeight()*5
[9,6,4,4,5,7,3,7,3,0,2,1,6,8,1,8,9,5,0,2], 5, 0, 45, 10.58, 100, <5: turns < 6 holes & >5: size 12, board.score() + board.maxHeight()*5
[0,5,3,0,1,8,2,1,5,8,6,9,7,9,2,4,3,4,6,7], 5, 0, 39, 5.20, 100, <5: turns < 6 holes & >5: size 12, board.score() + board.maxHeight()*5

[2,7,1,3,2,9,1,3,4,6,9,0,0,8,5,4,8,5,6,7], 5, 0, 53, 6.63, 100, <5: turns < 6 holes & >5: size 12 & holes<20, board.score() + board.maxHeight()*5
[6,1,7,2,9,8,1,3,0,0,8,5,4,3,4,7,5,6,2,9], 5, 0, 54, 11.49, 100, <5: turns < 6 holes & >5: size 12 & holes<20, board.score() + board.maxHeight()*5
[1,1,9,3,2,4,2,3,0,4,7,6,8,7,6,8,5,0,5,9], 5, 0, 49, 17.44, 100, <5: turns < 6 holes & >5: size 12 & holes<20, board.score() + board.maxHeight()*5
[8,6,4,9,5,2,7,0,0,4,3,8,9,1,3,1,2,6,7,5], 5, 0, 43, 16.85, 100, <5: turns < 6 holes & >5: size 12 & holes<20, board.score() + board.maxHeight()*5
[1,1,4,5,5,4,3,7,6,2,9,8,8,6,2,0,0,7,3,9], 5, 0, 60, 6.40, 100, <5: turns < 6 holes & >5: size 12 & holes<20, board.score() + board.maxHeight()*5
[9,7,6,3,6,0,1,3,0,9,7,4,5,4,8,2,8,1,2,5], 5, 0, 37, 16.73, 100, <5: turns < 6 holes & >5: size 12 & holes<20, board.score() + board.maxHeight()*5
[3,1,2,8,9,5,4,8,0,5,6,3,7,2,4,0,1,6,9,7], 5, 0, 53, 18.63, 100, <5: turns < 6 holes & >5: size 12 & holes<20, board.score() + board.maxHeight()*5
[0,6,3,5,2,6,8,7,3,8,7,1,5,9,9,4,2,0,1,4], 5, 0, 51, 17.61, 100, <5: turns < 6 holes & >5: size 12 & holes<20, board.score() + board.maxHeight()*5
[9,3,4,0,5,2,6,6,0,7,3,2,8,8,7,1,4,5,9,1], 5, 0, 36, 12.25, 100, <5: turns < 6 holes & >5: size 12 & holes<20, board.score() + board.maxHeight()*5
[9,6,4,4,5,7,3,7,3,0,2,1,6,8,1,8,9,5,0,2], 5, 0, 49, 12.17, 100, <5: turns < 6 holes & >5: size 12 & holes<20, board.score() + board.maxHeight()*5
[0,5,3,0,1,8,2,1,5,8,6,9,7,9,2,4,3,4,6,7], 5, 0, 42, 11.14, 100, <5: turns < 6 holes & >5: size 12 & holes<20, board.score() + board.maxHeight()*5

//nu met bord 18 (leek niet echt uit te maken alleen vaker vastlopen maar dat tracken we nu niet goed nog dus doe toch maar 20 going forward)

[2,7,1,3,2,9,1,3,4,6,9,0,0,8,5,4,8,5,6,7], 5, 0, 50, 10.00, 100, <5: turns < 6 holes & >5: size 12 & holes<20, board.score() + board.maxHeight()*5
[6,1,7,2,9,8,1,3,0,0,8,5,4,3,4,7,5,6,2,9], 5, 0, 50, 13.19, 100, <5: turns < 6 holes & >5: size 12 & holes<20, board.score() + board.maxHeight()*5
[1,1,9,3,2,4,2,3,0,4,7,6,8,7,6,8,5,0,5,9], 5, 0, 40, 10.15, 100, <5: turns < 6 holes & >5: size 12 & holes<20, board.score() + board.maxHeight()*5
[8,6,4,9,5,2,7,0,0,4,3,8,9,1,3,1,2,6,7,5], 5, 0, 47, 14.46, 100, <5: turns < 6 holes & >5: size 12 & holes<20, board.score() + board.maxHeight()*5
[1,1,4,5,5,4,3,7,6,2,9,8,8,6,2,0,0,7,3,9], 5, 0, 58, 9.70, 100, <5: turns < 6 holes & >5: size 12 & holes<20, board.score() + board.maxHeight()*5
[9,7,6,3,6,0,1,3,0,9,7,4,5,4,8,2,8,1,2,5], 5, 0, 40, 16.06, 100, <5: turns < 6 holes & >5: size 12 & holes<20, board.score() + board.maxHeight()*5
[3,1,2,8,9,5,4,8,0,5,6,3,7,2,4,0,1,6,9,7], 5, 0, 51, 14.56, 100, <5: turns < 6 holes & >5: size 12 & holes<20, board.score() + board.maxHeight()*5
[0,6,3,5,2,6,8,7,3,8,7,1,5,9,9,4,2,0,1,4], 5, 0, 46, 13.49, 100, <5: turns < 6 holes & >5: size 12 & holes<20, board.score() + board.maxHeight()*5
[9,3,4,0,5,2,6,6,0,7,3,2,8,8,7,1,4,5,9,1], 5, 0, 33, 10.86, 100, <5: turns < 6 holes & >5: size 12 & holes<20, board.score() + board.maxHeight()*5
[9,6,4,4,5,7,3,7,3,0,2,1,6,8,1,8,9,5,0,2], 5, 0, 43, 7.62, 100, <5: turns < 6 holes & >5: size 12 & holes<20, board.score() + board.maxHeight()*5
[0,5,3,0,1,8,2,1,5,8,6,9,7,9,2,4,3,4,6,7], 5, 0, 44, 7.00, 100, <5: turns < 6 holes & >5: size 12 & holes<20, board.score() + board.maxHeight()*5

[2,7,1,3,2,9,1,3,4,6,9,0,0,8,5,4,8,5,6,7], 5, 0, 61, 9.22, 1000, <5: turns < 6 holes & >5: size 12 & holes<20, board.score() + board.maxHeight()*5
[6,1,7,2,9,8,1,3,0,0,8,5,4,3,4,7,5,6,2,9], 5, 0, 74, 8.49, 1000, <5: turns < 6 holes & >5: size 12 & holes<20, board.score() + board.maxHeight()*5
[1,1,9,3,2,4,2,3,0,4,7,6,8,7,6,8,5,0,5,9], 5, 0, 65, 7.28, 1000, <5: turns < 6 holes & >5: size 12 & holes<20, board.score() + board.maxHeight()*5
[8,6,4,9,5,2,7,0,0,4,3,8,9,1,3,1,2,6,7,5], 5, 0, 65, 22.80, 1000, <5: turns < 6 holes & >5: size 12 & holes<20, board.score() + board.maxHeight()*5
[1,1,4,5,5,4,3,7,6,2,9,8,8,6,2,0,0,7,3,9], 5, 0, 62, 5.57, 1000, <5: turns < 6 holes & >5: size 12 & holes<20, board.score() + board.maxHeight()*5
[9,7,6,3,6,0,1,3,0,9,7,4,5,4,8,2,8,1,2,5], 5, 0, 47, 14.56, 1000, <5: turns < 6 holes & >5: size 12 & holes<20, board.score() + board.maxHeight()*5
[3,1,2,8,9,5,4,8,0,5,6,3,7,2,4,0,1,6,9,7], 5, 0, 67, 9.06, 1000, <5: turns < 6 holes & >5: size 12 & holes<20, board.score() + board.maxHeight()*5
[0,6,3,5,2,6,8,7,3,8,7,1,5,9,9,4,2,0,1,4], 5, 0, 61, 10.30, 1000, <5: turns < 6 holes & >5: size 12 & holes<20, board.score() + board.maxHeight()*5
[9,3,4,0,5,2,6,6,0,7,3,2,8,8,7,1,4,5,9,1], 5, 0, 38, 5.39, 1000, <5: turns < 6 holes & >5: size 12 & holes<20, board.score() + board.maxHeight()*5
[9,6,4,4,5,7,3,7,3,0,2,1,6,8,1,8,9,5,0,2], 5, 0, 77, 10.77, 1000, <5: turns < 6 holes & >5: size 12 & holes<20, board.score() + board.maxHeight()*5
[0,5,3,0,1,8,2,1,5,8,6,9,7,9,2,4,3,4,6,7], 5, 0, 45, 7.00, 1000, <5: turns < 6 holes & >5: size 12 & holes<20, board.score() + board.maxHeight()*5

[2,7,1,3,2,9,1,3,4,6,9,0,0,8,5,4,8,5,6,7], 5, 0, 64, 0.00, 1000, min holes and min boundingbox. let op nieuwe holes implementatie met call naar holesat(1), board.score*2 + maxheight*2
[6,1,7,2,9,8,1,3,0,0,8,5,4,3,4,7,5,6,2,9], 5, 0, 79, 0.00, 1000, min holes and min boundingbox. let op nieuwe holes implementatie met call naar holesat(1), board.score*2 + maxheight*2
[1,1,9,3,2,4,2,3,0,4,7,6,8,7,6,8,5,0,5,9], 5, 0, 63, 4.47, 1000, min holes and min boundingbox. let op nieuwe holes implementatie met call naar holesat(1), board.score*2 + maxheight*2
[8,6,4,9,5,2,7,0,0,4,3,8,9,1,3,1,2,6,7,5], 5, 0, 67, 9.70, 1000, min holes and min boundingbox. let op nieuwe holes implementatie met call naar holesat(1), board.score*2 + maxheight*2
[1,1,4,5,5,4,3,7,6,2,9,8,8,6,2,0,0,7,3,9], 5, 0, 67, 0.00, 1000, min holes and min boundingbox. let op nieuwe holes implementatie met call naar holesat(1), board.score*2 + maxheight*2
[9,7,6,3,6,0,1,3,0,9,7,4,5,4,8,2,8,1,2,5], 5, 0, 82, 1.00, 1000, min holes and min boundingbox. let op nieuwe holes implementatie met call naar holesat(1), board.score*2 + maxheight*2
[3,1,2,8,9,5,4,8,0,5,6,3,7,2,4,0,1,6,9,7], 5, 0, 62, 3.61, 1000, min holes and min boundingbox. let op nieuwe holes implementatie met call naar holesat(1), board.score*2 + maxheight*2
[0,6,3,5,2,6,8,7,3,8,7,1,5,9,9,4,2,0,1,4], 5, 0, 78, 3.61, 1000, min holes and min boundingbox. let op nieuwe holes implementatie met call naar holesat(1), board.score*2 + maxheight*2
[9,3,4,0,5,2,6,6,0,7,3,2,8,8,7,1,4,5,9,1], 5, 0, 76, 0.00, 1000, min holes and min boundingbox. let op nieuwe holes implementatie met call naar holesat(1), board.score*2 + maxheight*2
[9,6,4,4,5,7,3,7,3,0,2,1,6,8,1,8,9,5,0,2], 5, 0, 70, 3.32, 1000, min holes and min boundingbox. let op nieuwe holes implementatie met call naar holesat(1), board.score*2 + maxheight*2
[0,5,3,0,1,8,2,1,5,8,6,9,7,9,2,4,3,4,6,7], 5, 0, 57, 3.16, 1000, min holes and min boundingbox. let op nieuwe holes implementatie met call naar holesat(1), board.score*2 + maxheight*2

[2,7,1,3,2,9,1,3,4,6,9,0,0,8,5,4,8,5,6,7], 5, 0, 65, 3.32, 100, min holes and min boundingbox. , board.score*2 + maxheight*2
[6,1,7,2,9,8,1,3,0,0,8,5,4,3,4,7,5,6,2,9], 5, 0, 79, 6.00, 100, min holes and min boundingbox. , board.score*2 + maxheight*2
[1,1,9,3,2,4,2,3,0,4,7,6,8,7,6,8,5,0,5,9], 5, 0, 58, 5.29, 100, min holes and min boundingbox. , board.score*2 + maxheight*2
[8,6,4,9,5,2,7,0,0,4,3,8,9,1,3,1,2,6,7,5], 5, 0, 63, 15.59, 100, min holes and min boundingbox. , board.score*2 + maxheight*2
[1,1,4,5,5,4,3,7,6,2,9,8,8,6,2,0,0,7,3,9], 5, 0, 65, 5.00, 100, min holes and min boundingbox. , board.score*2 + maxheight*2
[9,7,6,3,6,0,1,3,0,9,7,4,5,4,8,2,8,1,2,5], 5, 0, 84, 3.87, 100, min holes and min boundingbox. , board.score*2 + maxheight*2
[3,1,2,8,9,5,4,8,0,5,6,3,7,2,4,0,1,6,9,7], 5, 0, 69, 0.00, 100, min holes and min boundingbox. , board.score*2 + maxheight*2
[0,6,3,5,2,6,8,7,3,8,7,1,5,9,9,4,2,0,1,4], 5, 0, 73, 5.83, 100, min holes and min boundingbox. , board.score*2 + maxheight*2
[9,3,4,0,5,2,6,6,0,7,3,2,8,8,7,1,4,5,9,1], 5, 0, 66, 5.92, 100, min holes and min boundingbox. , board.score*2 + maxheight*2
[9,6,4,4,5,7,3,7,3,0,2,1,6,8,1,8,9,5,0,2], 5, 0, 65, 4.69, 100, min holes and min boundingbox. , board.score*2 + maxheight*2
[0,5,3,0,1,8,2,1,5,8,6,9,7,9,2,4,3,4,6,7], 5, 0, 51, 2.45, 100, min holes and min boundingbox. , board.score*2 + maxheight*2

[2,7,1,3,2,9,1,3,4,6,9,0,0,8,5,4,8,5,6,7], 5, 0, 67, 11.66, 100, min holes and min boundingbox + 5. , board.score*2 + maxheight*2
[6,1,7,2,9,8,1,3,0,0,8,5,4,3,4,7,5,6,2,9], 5, 0, 76, 12.45, 100, min holes and min boundingbox + 5. , board.score*2 + maxheight*2
[1,1,9,3,2,4,2,3,0,4,7,6,8,7,6,8,5,0,5,9], 5, 0, 74, 8.25, 100, min holes and min boundingbox + 5. , board.score*2 + maxheight*2
[8,6,4,9,5,2,7,0,0,4,3,8,9,1,3,1,2,6,7,5], 5, 0, 82, 17.52, 100, min holes and min boundingbox + 5. , board.score*2 + maxheight*2
[1,1,4,5,5,4,3,7,6,2,9,8,8,6,2,0,0,7,3,9], 5, 0, 71, 9.33, 100, min holes and min boundingbox + 5. , board.score*2 + maxheight*2
[9,7,6,3,6,0,1,3,0,9,7,4,5,4,8,2,8,1,2,5], 5, 0, 85, 9.59, 100, min holes and min boundingbox + 5. , board.score*2 + maxheight*2
[3,1,2,8,9,5,4,8,0,5,6,3,7,2,4,0,1,6,9,7], 5, 0, 83, 8.89, 100, min holes and min boundingbox + 5. , board.score*2 + maxheight*2
[0,6,3,5,2,6,8,7,3,8,7,1,5,9,9,4,2,0,1,4], 5, 0, 80, 8.54, 100, min holes and min boundingbox + 5. , board.score*2 + maxheight*2
[9,3,4,0,5,2,6,6,0,7,3,2,8,8,7,1,4,5,9,1], 5, 0, 73, 5.20, 100, min holes and min boundingbox + 5. , board.score*2 + maxheight*2
[9,6,4,4,5,7,3,7,3,0,2,1,6,8,1,8,9,5,0,2], 5, 0, 62, 13.78, 100, min holes and min boundingbox + 5. , board.score*2 + maxheight*2
[0,5,3,0,1,8,2,1,5,8,6,9,7,9,2,4,3,4,6,7], 5, 0, 65, 8.19, 100, min holes and min boundingbox + 5. , board.score*2 + maxheight*2

[2,7,1,3,2,9,1,3,4,6,9,0,0,8,5,4,8,5,6,7], 5, 0, 76, 5.83, 100, min holes + 3 and min boundingbox + 10. , board.score*2 + maxheight*2
[6,1,7,2,9,8,1,3,0,0,8,5,4,3,4,7,5,6,2,9], 5, 0, 80, 8.89, 100, min holes + 3 and min boundingbox + 10. , board.score*2 + maxheight*2
[1,1,9,3,2,4,2,3,0,4,7,6,8,7,6,8,5,0,5,9], 5, 0, 73, 6.48, 100, min holes + 3 and min boundingbox + 10. , board.score*2 + maxheight*2
[8,6,4,9,5,2,7,0,0,4,3,8,9,1,3,1,2,6,7,5], 5, 0, 69, 13.53, 100, min holes + 3 and min boundingbox + 10. , board.score*2 + maxheight*2
[1,1,4,5,5,4,3,7,6,2,9,8,8,6,2,0,0,7,3,9], 5, 0, 71, 4.47, 100, min holes + 3 and min boundingbox + 10. , board.score*2 + maxheight*2
[9,7,6,3,6,0,1,3,0,9,7,4,5,4,8,2,8,1,2,5], 5, 0, 91, 5.92, 100, min holes + 3 and min boundingbox + 10. , board.score*2 + maxheight*2
[3,1,2,8,9,5,4,8,0,5,6,3,7,2,4,0,1,6,9,7], 5, 0, 72, 4.90, 100, min holes + 3 and min boundingbox + 10. , board.score*2 + maxheight*2
[0,6,3,5,2,6,8,7,3,8,7,1,5,9,9,4,2,0,1,4], 5, 0, 68, 10.77, 100, min holes + 3 and min boundingbox + 10. , board.score*2 + maxheight*2
[9,3,4,0,5,2,6,6,0,7,3,2,8,8,7,1,4,5,9,1], 5, 0, 80, 4.69, 100, min holes + 3 and min boundingbox + 10. , board.score*2 + maxheight*2
[9,6,4,4,5,7,3,7,3,0,2,1,6,8,1,8,9,5,0,2], 5, 0, 77, 8.25, 100, min holes + 3 and min boundingbox + 10. , board.score*2 + maxheight*2
[0,5,3,0,1,8,2,1,5,8,6,9,7,9,2,4,3,4,6,7], 5, 0, 69, 7.81, 100, min holes + 3 and min boundingbox + 10. , board.score*2 + maxheight*2

[2,7,1,3,2,9,1,3,4,6,9,0,0,8,5,4,8,5,6,7], 5, 0, 79, 7.75, 100, min holes + 1 and min boundingbox + 10. , board.score*2 + maxheight*2
[6,1,7,2,9,8,1,3,0,0,8,5,4,3,4,7,5,6,2,9], 5, 0, 73, 8.54, 100, min holes + 1 and min boundingbox + 10. , board.score*2 + maxheight*2
[1,1,9,3,2,4,2,3,0,4,7,6,8,7,6,8,5,0,5,9], 5, 0, 88, 12.88, 100, min holes + 1 and min boundingbox + 10. , board.score*2 + maxheight*2
[8,6,4,9,5,2,7,0,0,4,3,8,9,1,3,1,2,6,7,5], 5, 0, 66, 11.18, 100, min holes + 1 and min boundingbox + 10. , board.score*2 + maxheight*2
[1,1,4,5,5,4,3,7,6,2,9,8,8,6,2,0,0,7,3,9], 5, 0, 70, 10.58, 100, min holes + 1 and min boundingbox + 10. , board.score*2 + maxheight*2
[9,7,6,3,6,0,1,3,0,9,7,4,5,4,8,2,8,1,2,5], 5, 0, 79, 8.12, 100, min holes + 1 and min boundingbox + 10. , board.score*2 + maxheight*2
[3,1,2,8,9,5,4,8,0,5,6,3,7,2,4,0,1,6,9,7], 5, 0, 61, 11.09, 100, min holes + 1 and min boundingbox + 10. , board.score*2 + maxheight*2
[0,6,3,5,2,6,8,7,3,8,7,1,5,9,9,4,2,0,1,4], 5, 0, 85, 8.77, 100, min holes + 1 and min boundingbox + 10. , board.score*2 + maxheight*2
[9,3,4,0,5,2,6,6,0,7,3,2,8,8,7,1,4,5,9,1], 5, 0, 69, 10.34, 100, min holes + 1 and min boundingbox + 10. , board.score*2 + maxheight*2
[9,6,4,4,5,7,3,7,3,0,2,1,6,8,1,8,9,5,0,2], 5, 0, 75, 12.21, 100, min holes + 1 and min boundingbox + 10. , board.score*2 + maxheight*2
[0,5,3,0,1,8,2,1,5,8,6,9,7,9,2,4,3,4,6,7], 5, 0, 75, 1.41, 100, min holes + 1 and min boundingbox + 10. , board.score*2 + maxheight*2

[2,7,1,3,2,9,1,3,4,6,9,0,0,8,5,4,8,5,6,7], 5, 0, 65, 10.30, 100, min holes and min boundingbox + 5. , board.score*2 + maxheight*2
[6,1,7,2,9,8,1,3,0,0,8,5,4,3,4,7,5,6,2,9], 5, 0, 78, 4.00, 100, min holes and min boundingbox + 5. , board.score*2 + maxheight*2
[1,1,9,3,2,4,2,3,0,4,7,6,8,7,6,8,5,0,5,9], 5, 0, 66, 6.63, 100, min holes and min boundingbox + 5. , board.score*2 + maxheight*2
[8,6,4,9,5,2,7,0,0,4,3,8,9,1,3,1,2,6,7,5], 5, 0, 84, 12.04, 100, min holes and min boundingbox + 5. , board.score*2 + maxheight*2
[1,1,4,5,5,4,3,7,6,2,9,8,8,6,2,0,0,7,3,9], 5, 0, 69, 6.86, 100, min holes and min boundingbox + 5. , board.score*2 + maxheight*2
[9,7,6,3,6,0,1,3,0,9,7,4,5,4,8,2,8,1,2,5], 5, 0, 84, 7.94, 100, min holes and min boundingbox + 5. , board.score*2 + maxheight*2
[3,1,2,8,9,5,4,8,0,5,6,3,7,2,4,0,1,6,9,7], 5, 0, 75, 13.71, 100, min holes and min boundingbox + 5. , board.score*2 + maxheight*2
[0,6,3,5,2,6,8,7,3,8,7,1,5,9,9,4,2,0,1,4], 5, 0, 84, 6.24, 100, min holes and min boundingbox + 5. , board.score*2 + maxheight*2
[9,3,4,0,5,2,6,6,0,7,3,2,8,8,7,1,4,5,9,1], 5, 0, 76, 6.63, 100, min holes and min boundingbox + 5. , board.score*2 + maxheight*2
[9,6,4,4,5,7,3,7,3,0,2,1,6,8,1,8,9,5,0,2], 5, 0, 73, 6.32, 100, min holes and min boundingbox + 5. , board.score*2 + maxheight*2
[0,5,3,0,1,8,2,1,5,8,6,9,7,9,2,4,3,4,6,7], 5, 0, 61, 4.90, 100, min holes and min boundingbox + 5. , board.score*2 + maxheight*2

[2,7,1,3,2,9,1,3,4,6,9,0,0,8,5,4,8,5,6,7], 5, 0, 66, 4.47, 100, min holes and min boundingbox + 10. , board.score*2 + maxheight*2
[6,1,7,2,9,8,1,3,0,0,8,5,4,3,4,7,5,6,2,9], 5, 0, 80, 5.39, 100, min holes and min boundingbox + 10. , board.score*2 + maxheight*2
[1,1,9,3,2,4,2,3,0,4,7,6,8,7,6,8,5,0,5,9], 5, 0, 79, 8.19, 100, min holes and min boundingbox + 10. , board.score*2 + maxheight*2
[8,6,4,9,5,2,7,0,0,4,3,8,9,1,3,1,2,6,7,5], 5, 0, 77, 8.77, 100, min holes and min boundingbox + 10. , board.score*2 + maxheight*2
[1,1,4,5,5,4,3,7,6,2,9,8,8,6,2,0,0,7,3,9], 5, 0, 75, 12.17, 100, min holes and min boundingbox + 10. , board.score*2 + maxheight*2
[9,7,6,3,6,0,1,3,0,9,7,4,5,4,8,2,8,1,2,5], 5, 0, 82, 9.33, 100, min holes and min boundingbox + 10. , board.score*2 + maxheight*2
[3,1,2,8,9,5,4,8,0,5,6,3,7,2,4,0,1,6,9,7], 5, 0, 86, 6.08, 100, min holes and min boundingbox + 10. , board.score*2 + maxheight*2
[0,6,3,5,2,6,8,7,3,8,7,1,5,9,9,4,2,0,1,4], 5, 0, 76, 9.90, 100, min holes and min boundingbox + 10. , board.score*2 + maxheight*2
[9,3,4,0,5,2,6,6,0,7,3,2,8,8,7,1,4,5,9,1], 5, 0, 74, 8.77, 100, min holes and min boundingbox + 10. , board.score*2 + maxheight*2
[9,6,4,4,5,7,3,7,3,0,2,1,6,8,1,8,9,5,0,2], 5, 0, 77, 12.88, 100, min holes and min boundingbox + 10. , board.score*2 + maxheight*2
[0,5,3,0,1,8,2,1,5,8,6,9,7,9,2,4,3,4,6,7], 5, 0, 66, 5.83, 100, min holes and min boundingbox + 10. , board.score*2 + maxheight*2

[2,7,1,3,2,9,1,3,4,6,9,0,0,8,5,4,8,5,6,7], 5, 0, 62, 6.63, 100, min holes and min boundingbox + 8. , board.score*2 + maxheight*2
[6,1,7,2,9,8,1,3,0,0,8,5,4,3,4,7,5,6,2,9], 5, 0, 78, 10.00, 100, min holes and min boundingbox + 8. , board.score*2 + maxheight*2
[1,1,9,3,2,4,2,3,0,4,7,6,8,7,6,8,5,0,5,9], 5, 0, 73, 8.54, 100, min holes and min boundingbox + 8. , board.score*2 + maxheight*2
[8,6,4,9,5,2,7,0,0,4,3,8,9,1,3,1,2,6,7,5], 5, 0, 88, 7.42, 100, min holes and min boundingbox + 8. , board.score*2 + maxheight*2
[1,1,4,5,5,4,3,7,6,2,9,8,8,6,2,0,0,7,3,9], 5, 0, 73, 8.31, 100, min holes and min boundingbox + 8. , board.score*2 + maxheight*2
[9,7,6,3,6,0,1,3,0,9,7,4,5,4,8,2,8,1,2,5], 5, 0, 82, 5.92, 100, min holes and min boundingbox + 8. , board.score*2 + maxheight*2
[3,1,2,8,9,5,4,8,0,5,6,3,7,2,4,0,1,6,9,7], 5, 0, 73, 8.12, 100, min holes and min boundingbox + 8. , board.score*2 + maxheight*2
[0,6,3,5,2,6,8,7,3,8,7,1,5,9,9,4,2,0,1,4], 5, 0, 75, 8.66, 100, min holes and min boundingbox + 8. , board.score*2 + maxheight*2
[9,3,4,0,5,2,6,6,0,7,3,2,8,8,7,1,4,5,9,1], 5, 0, 68, 9.54, 100, min holes and min boundingbox + 8. , board.score*2 + maxheight*2
[9,6,4,4,5,7,3,7,3,0,2,1,6,8,1,8,9,5,0,2], 5, 0, 75, 9.22, 100, min holes and min boundingbox + 8. , board.score*2 + maxheight*2
[0,5,3,0,1,8,2,1,5,8,6,9,7,9,2,4,3,4,6,7], 5, 0, 63, 6.48, 100, min holes and min boundingbox + 8. , board.score*2 + maxheight*2

[2,7,1,3,2,9,1,3,4,6,9,0,0,8,5,4,8,5,6,7], 5, 0, 64, 8.19, 100, min holes and min boundingbox + 10. let op nieuwe holes implementatie met call naar holesat(1), board.score*2 + maxheight*2
[6,1,7,2,9,8,1,3,0,0,8,5,4,3,4,7,5,6,2,9], 5, 0, 69, 8.12, 100, min holes and min boundingbox + 10. let op nieuwe holes implementatie met call naar holesat(1), board.score*2 + maxheight*2
[1,1,9,3,2,4,2,3,0,4,7,6,8,7,6,8,5,0,5,9], 5, 0, 75, 10.63, 100, min holes and min boundingbox + 10. let op nieuwe holes implementatie met call naar holesat(1), board.score*2 + maxheight*2
[8,6,4,9,5,2,7,0,0,4,3,8,9,1,3,1,2,6,7,5], 5, 0, 80, 15.46, 100, min holes and min boundingbox + 10. let op nieuwe holes implementatie met call naar holesat(1), board.score*2 + maxheight*2
[1,1,4,5,5,4,3,7,6,2,9,8,8,6,2,0,0,7,3,9], 5, 0, 80, 6.71, 100, min holes and min boundingbox + 10. let op nieuwe holes implementatie met call naar holesat(1), board.score*2 + maxheight*2
[9,7,6,3,6,0,1,3,0,9,7,4,5,4,8,2,8,1,2,5], 5, 0, 88, 10.44, 100, min holes and min boundingbox + 10. let op nieuwe holes implementatie met call naar holesat(1), board.score*2 + maxheight*2
[3,1,2,8,9,5,4,8,0,5,6,3,7,2,4,0,1,6,9,7], 5, 0, 75, 11.58, 100, min holes and min boundingbox + 10. let op nieuwe holes implementatie met call naar holesat(1), board.score*2 + maxheight*2
[0,6,3,5,2,6,8,7,3,8,7,1,5,9,9,4,2,0,1,4], 5, 0, 76, 6.78, 100, min holes and min boundingbox + 10. let op nieuwe holes implementatie met call naar holesat(1), board.score*2 + maxheight*2
[9,3,4,0,5,2,6,6,0,7,3,2,8,8,7,1,4,5,9,1], 5, 0, 74, 7.94, 100, min holes and min boundingbox + 10. let op nieuwe holes implementatie met call naar holesat(1), board.score*2 + maxheight*2
[9,6,4,4,5,7,3,7,3,0,2,1,6,8,1,8,9,5,0,2], 5, 0, 79, 11.27, 100, min holes and min boundingbox + 10. let op nieuwe holes implementatie met call naar holesat(1), board.score*2 + maxheight*2
[0,5,3,0,1,8,2,1,5,8,6,9,7,9,2,4,3,4,6,7], 5, 0, 61, 8.49, 100, min holes and min boundingbox + 10. let op nieuwe holes implementatie met call naar holesat(1), board.score*2 + maxheight*2

//this all makes little difference. now playing with the exploration factor (above all was 100, now I picked 10)
[2,7,1,3,2,9,1,3,4,6,9,0,0,8,5,4,8,5,6,7], 5, 0, 63, 6.24, 100, min holes and min boundingbox + 10. let op nieuwe holes implementatie met call naar holesat(1), board.score*2 + maxheight*2
[6,1,7,2,9,8,1,3,0,0,8,5,4,3,4,7,5,6,2,9], 5, 0, 71, 9.54, 100, min holes and min boundingbox + 10. let op nieuwe holes implementatie met call naar holesat(1), board.score*2 + maxheight*2
[1,1,9,3,2,4,2,3,0,4,7,6,8,7,6,8,5,0,5,9], 5, 0, 75, 10.30, 100, min holes and min boundingbox + 10. let op nieuwe holes implementatie met call naar holesat(1), board.score*2 + maxheight*2
[8,6,4,9,5,2,7,0,0,4,3,8,9,1,3,1,2,6,7,5], 5, 0, 73, 6.63, 100, min holes and min boundingbox + 10. let op nieuwe holes implementatie met call naar holesat(1), board.score*2 + maxheight*2
[1,1,4,5,5,4,3,7,6,2,9,8,8,6,2,0,0,7,3,9], 5, 0, 74, 10.58, 100, min holes and min boundingbox + 10. let op nieuwe holes implementatie met call naar holesat(1), board.score*2 + maxheight*2
[9,7,6,3,6,0,1,3,0,9,7,4,5,4,8,2,8,1,2,5], 5, 0, 75, 16.31, 100, min holes and min boundingbox + 10. let op nieuwe holes implementatie met call naar holesat(1), board.score*2 + maxheight*2
[3,1,2,8,9,5,4,8,0,5,6,3,7,2,4,0,1,6,9,7], 5, 0, 69, 11.09, 100, min holes and min boundingbox + 10. let op nieuwe holes implementatie met call naar holesat(1), board.score*2 + maxheight*2
[0,6,3,5,2,6,8,7,3,8,7,1,5,9,9,4,2,0,1,4], 5, 0, 82, 4.24, 100, min holes and min boundingbox + 10. let op nieuwe holes implementatie met call naar holesat(1), board.score*2 + maxheight*2
[9,3,4,0,5,2,6,6,0,7,3,2,8,8,7,1,4,5,9,1], 5, 0, 76, 14.28, 100, min holes and min boundingbox + 10. let op nieuwe holes implementatie met call naar holesat(1), board.score*2 + maxheight*2
[9,6,4,4,5,7,3,7,3,0,2,1,6,8,1,8,9,5,0,2], 5, 0, 76, 12.17, 100, min holes and min boundingbox + 10. let op nieuwe holes implementatie met call naar holesat(1), board.score*2 + maxheight*2
[0,5,3,0,1,8,2,1,5,8,6,9,7,9,2,4,3,4,6,7], 5, 0, 68, 9.00, 100, min holes and min boundingbox + 10. let op nieuwe holes implementatie met call naar holesat(1), board.score*2 + maxheight*2

//exploration factor op 1 (niet beter dus)
[2,7,1,3,2,9,1,3,4,6,9,0,0,8,5,4,8,5,6,7], 5, 0, 60, 5.39, 100, min holes and min boundingbox + 10. let op nieuwe holes implementatie met call naar holesat(1), board.score*2 + maxheight*2
[6,1,7,2,9,8,1,3,0,0,8,5,4,3,4,7,5,6,2,9], 5, 0, 72, 8.72, 100, min holes and min boundingbox + 10. let op nieuwe holes implementatie met call naar holesat(1), board.score*2 + maxheight*2
[1,1,9,3,2,4,2,3,0,4,7,6,8,7,6,8,5,0,5,9], 5, 0, 72, 10.49, 100, min holes and min boundingbox + 10. let op nieuwe holes implementatie met call naar holesat(1), board.score*2 + maxheight*2
[8,6,4,9,5,2,7,0,0,4,3,8,9,1,3,1,2,6,7,5], 5, 0, 66, 10.15, 100, min holes and min boundingbox + 10. let op nieuwe holes implementatie met call naar holesat(1), board.score*2 + maxheight*2
[1,1,4,5,5,4,3,7,6,2,9,8,8,6,2,0,0,7,3,9], 5, 0, 68, 13.82, 100, min holes and min boundingbox + 10. let op nieuwe holes implementatie met call naar holesat(1), board.score*2 + maxheight*2
[9,7,6,3,6,0,1,3,0,9,7,4,5,4,8,2,8,1,2,5], 5, 0, 70, 9.59, 100, min holes and min boundingbox + 10. let op nieuwe holes implementatie met call naar holesat(1), board.score*2 + maxheight*2
[3,1,2,8,9,5,4,8,0,5,6,3,7,2,4,0,1,6,9,7], 5, 0, 67, 13.38, 100, min holes and min boundingbox + 10. let op nieuwe holes implementatie met call naar holesat(1), board.score*2 + maxheight*2
[0,6,3,5,2,6,8,7,3,8,7,1,5,9,9,4,2,0,1,4], 5, 0, 65, 13.00, 100, min holes and min boundingbox + 10. let op nieuwe holes implementatie met call naar holesat(1), board.score*2 + maxheight*2
[9,3,4,0,5,2,6,6,0,7,3,2,8,8,7,1,4,5,9,1], 5, 0, 65, 13.45, 100, min holes and min boundingbox + 10. let op nieuwe holes implementatie met call naar holesat(1), board.score*2 + maxheight*2
[9,6,4,4,5,7,3,7,3,0,2,1,6,8,1,8,9,5,0,2], 5, 0, 73, 8.19, 100, min holes and min boundingbox + 10. let op nieuwe holes implementatie met call naar holesat(1), board.score*2 + maxheight*2
[0,5,3,0,1,8,2,1,5,8,6,9,7,9,2,4,3,4,6,7], 5, 0, 54, 4.69, 100, min holes and min boundingbox + 10. let op nieuwe holes implementatie met call naar holesat(1), board.score*2 + maxheight*2

//nu eens met 1000 proberen:
[2,7,1,3,2,9,1,3,4,6,9,0,0,8,5,4,8,5,6,7], 5, 0, 61, 12.57, 100, (vanwege hoge ex, factor (1000) strak ingesteld: min holes and min boundingbox + 5., board.score*2 + maxheight*2
[6,1,7,2,9,8,1,3,0,0,8,5,4,3,4,7,5,6,2,9], 5, 0, 77, 9.80, 100, (vanwege hoge ex, factor (1000) strak ingesteld: min holes and min boundingbox + 5., board.score*2 + maxheight*2
[1,1,9,3,2,4,2,3,0,4,7,6,8,7,6,8,5,0,5,9], 5, 0, 69, 8.00, 100, (vanwege hoge ex, factor (1000) strak ingesteld: min holes and min boundingbox + 5., board.score*2 + maxheight*2
[8,6,4,9,5,2,7,0,0,4,3,8,9,1,3,1,2,6,7,5], 5, 0, 83, 12.69, 100, (vanwege hoge ex, factor (1000) strak ingesteld: min holes and min boundingbox + 5., board.score*2 + maxheight*2
[1,1,4,5,5,4,3,7,6,2,9,8,8,6,2,0,0,7,3,9], 5, 0, 72, 9.85, 100, (vanwege hoge ex, factor (1000) strak ingesteld: min holes and min boundingbox + 5., board.score*2 + maxheight*2
[9,7,6,3,6,0,1,3,0,9,7,4,5,4,8,2,8,1,2,5], 5, 0, 85, 5.74, 100, (vanwege hoge ex, factor (1000) strak ingesteld: min holes and min boundingbox + 5., board.score*2 + maxheight*2
[3,1,2,8,9,5,4,8,0,5,6,3,7,2,4,0,1,6,9,7], 5, 0, 79, 9.75, 100, (vanwege hoge ex, factor (1000) strak ingesteld: min holes and min boundingbox + 5., board.score*2 + maxheight*2
[0,6,3,5,2,6,8,7,3,8,7,1,5,9,9,4,2,0,1,4], 5, 0, 80, 1.41, 100, (vanwege hoge ex, factor (1000) strak ingesteld: min holes and min boundingbox + 5., board.score*2 + maxheight*2
[9,3,4,0,5,2,6,6,0,7,3,2,8,8,7,1,4,5,9,1], 5, 0, 65, 10.25, 100, (vanwege hoge ex, factor (1000) strak ingesteld: min holes and min boundingbox + 5., board.score*2 + maxheight*2
[9,6,4,4,5,7,3,7,3,0,2,1,6,8,1,8,9,5,0,2], 5, 0, 89, 9.33, 100, (vanwege hoge ex, factor (1000) strak ingesteld: min holes and min boundingbox + 5., board.score*2 + maxheight*2
[0,5,3,0,1,8,2,1,5,8,6,9,7,9,2,4,3,4,6,7], 5, 0, 62, 5.66, 100, (vanwege hoge ex, factor (1000) strak ingesteld: min holes and min boundingbox + 5., board.score*2 + maxheight*2

[2,7,1,3,2,9,1,3,4,6,9,0,0,8,5,4,8,5,6,7], 5, 0, 28, 5.92, 1, (vanwege hoge ex, factor (1000) strak ingesteld: min holes and min boundingbox + 5., board.score*2 + maxheight*2
[6,1,7,2,9,8,1,3,0,0,8,5,4,3,4,7,5,6,2,9], 5, 0, 40, 7.48, 1, (vanwege hoge ex, factor (1000) strak ingesteld: min holes and min boundingbox + 5., board.score*2 + maxheight*2
[1,1,9,3,2,4,2,3,0,4,7,6,8,7,6,8,5,0,5,9], 5, 0, 37, 5.57, 1, (vanwege hoge ex, factor (1000) strak ingesteld: min holes and min boundingbox + 5., board.score*2 + maxheight*2
[8,6,4,9,5,2,7,0,0,4,3,8,9,1,3,1,2,6,7,5], 5, 0, 39, 11.09, 1, (vanwege hoge ex, factor (1000) strak ingesteld: min holes and min boundingbox + 5., board.score*2 + maxheight*2
[1,1,4,5,5,4,3,7,6,2,9,8,8,6,2,0,0,7,3,9], 5, 0, 39, 13.71, 1, (vanwege hoge ex, factor (1000) strak ingesteld: min holes and min boundingbox + 5., board.score*2 + maxheight*2
[9,7,6,3,6,0,1,3,0,9,7,4,5,4,8,2,8,1,2,5], 5, 0, 41, 6.78, 1, (vanwege hoge ex, factor (1000) strak ingesteld: min holes and min boundingbox + 5., board.score*2 + maxheight*2
[3,1,2,8,9,5,4,8,0,5,6,3,7,2,4,0,1,6,9,7], 5, 0, 41, 10.95, 1, (vanwege hoge ex, factor (1000) strak ingesteld: min holes and min boundingbox + 5., board.score*2 + maxheight*2
[0,6,3,5,2,6,8,7,3,8,7,1,5,9,9,4,2,0,1,4], 5, 0, 36, 10.58, 1, (vanwege hoge ex, factor (1000) strak ingesteld: min holes and min boundingbox + 5., board.score*2 + maxheight*2
[9,3,4,0,5,2,6,6,0,7,3,2,8,8,7,1,4,5,9,1], 5, 0, 36, 11.66, 1, (vanwege hoge ex, factor (1000) strak ingesteld: min holes and min boundingbox + 5., board.score*2 + maxheight*2
[9,6,4,4,5,7,3,7,3,0,2,1,6,8,1,8,9,5,0,2], 5, 0, 39, 7.21, 1, (vanwege hoge ex, factor (1000) strak ingesteld: min holes and min boundingbox + 5., board.score*2 + maxheight*2
[0,5,3,0,1,8,2,1,5,8,6,9,7,9,2,4,3,4,6,7], 5, 0, 46, 5.66, 1, (vanwege hoge ex, factor (1000) strak ingesteld: min holes and min boundingbox + 5., board.score*2 + maxheight*2

//nu weer terig naar wiggly factor 100, met 10.000 iterations
[2,7,1,3,2,9,1,3,4,6,9,0,0,8,5,4,8,5,6,7], 3, 0, 65, 0.00, 10000, min holes and min boundingbox + 5, board.score*2 + maxheight*2
[6,1,7,2,9,8,1,3,0,0,8,5,4,3,4,7,5,6,2,9], 3, 0, 86, 1.41, 10000, min holes and min boundingbox + 5, board.score*2 + maxheight*2
[1,1,9,3,2,4,2,3,0,4,7,6,8,7,6,8,5,0,5,9], 3, 0, 83, 4.47, 10000, min holes and min boundingbox + 5, board.score*2 + maxheight*2
[8,6,4,9,5,2,7,0,0,4,3,8,9,1,3,1,2,6,7,5], 3, 0, 98, 2.45, 10000, min holes and min boundingbox + 5, board.score*2 + maxheight*2
[1,1,4,5,5,4,3,7,6,2,9,8,8,6,2,0,0,7,3,9], 3, 0, 67, 0.00, 10000, min holes and min boundingbox + 5, board.score*2 + maxheight*2
[9,7,6,3,6,0,1,3,0,9,7,4,5,4,8,2,8,1,2,5], 3, 0, 87, 8.49, 10000, min holes and min boundingbox + 5, board.score*2 + maxheight*2
[3,1,2,8,9,5,4,8,0,5,6,3,7,2,4,0,1,6,9,7], 3, 0, 90, 2.83, 10000, min holes and min boundingbox + 5, board.score*2 + maxheight*2
[0,6,3,5,2,6,8,7,3,8,7,1,5,9,9,4,2,0,1,4], 3, 0, 81, 0.00, 10000, min holes and min boundingbox + 5, board.score*2 + maxheight*2
//not finished (decks 9-11 still to be played)